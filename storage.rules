rules_version = '2';

// Reglas de Firebase Storage - Portfolio solo Admin
service firebase.storage {
  match /b/{bucket}/o {
    
    // Función helper para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función helper para verificar si el usuario es admin
    function isAdmin() {
      return request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Función helper para validar tipos de archivo de imagen
    function isValidImageType() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // Función helper para validar tamaño de archivo (5MB máximo)
    function isValidSize() {
      return request.resource.size < 5 * 1024 * 1024;
    }
    
    // ===== REGLAS PARA PORTFOLIO - SOLO ADMIN =====
    // Imágenes de proyectos/portfolio - Solo admin puede subir
    match /projects/{userId}/{fileName} {
      // Lectura: Todos pueden ver imágenes de proyectos
      allow read: if true;
      
      // Escritura: Solo admin puede subir imágenes de proyectos
      allow write: if isAdmin() && 
                      isValidImageType() && 
                      isValidSize();
    }
    
    // ===== MODO TEST PARA OTRAS IMÁGENES =====
    // Permite lectura y escritura para otras rutas (temporal)
    match /{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // ===== REGLAS PARA PRODUCCIÓN (COMENTADAS) =====
    // Descomenta estas reglas y comenta las de arriba para producción
    
    /*
    // Función helper para verificar autenticación
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función helper para verificar si es el propietario
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Función helper para validar tipos de archivo de imagen
    function isValidImageType() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // Función helper para validar tamaño de archivo (5MB máximo)
    function isValidSize() {
      return request.resource.size < 5 * 1024 * 1024;
    }
    
    // Reglas para avatares de usuario
    match /avatars/{userId}/{fileName} {
      // Lectura: Todos pueden ver avatares
      allow read: if true;
      
      // Escritura: Solo el usuario propietario puede subir su avatar
      allow write: if isAuthenticated() && 
                      isOwner(userId) && 
                      isValidImageType() && 
                      request.resource.size < 1 * 1024 * 1024; // 1MB para avatares
    }
    
    // Reglas para imágenes de proyectos
    match /projects/{userId}/{fileName} {
      // Lectura: Todos pueden ver imágenes de proyectos
      allow read: if true;
      
      // Escritura: Solo usuarios autenticados pueden subir imágenes de proyectos
      allow write: if isAuthenticated() && 
                      isValidImageType() && 
                      isValidSize();
    }
    
    // Reglas para imágenes de blog
    match /blog/{userId}/{fileName} {
      // Lectura: Todos pueden ver imágenes de blog
      allow read: if true;
      
      // Escritura: Solo usuarios autenticados pueden subir imágenes de blog
      allow write: if isAuthenticated() && 
                      isValidImageType() && 
                      isValidSize();
    }
    
    // Reglas para thumbnails
    match /thumbnails/{userId}/{fileName} {
      // Lectura: Todos pueden ver thumbnails
      allow read: if true;
      
      // Escritura: Solo usuarios autenticados pueden subir thumbnails
      allow write: if isAuthenticated() && 
                      isValidImageType() && 
                      request.resource.size < 500 * 1024; // 500KB para thumbnails
    }
    
    // Reglas para imágenes generales
    match /images/{userId}/{fileName} {
      // Lectura: Todos pueden ver imágenes
      allow read: if true;
      
      // Escritura: Solo usuarios autenticados pueden subir imágenes
      allow write: if isAuthenticated() && 
                      isValidImageType() && 
                      isValidSize();
    }
    */
  }
}